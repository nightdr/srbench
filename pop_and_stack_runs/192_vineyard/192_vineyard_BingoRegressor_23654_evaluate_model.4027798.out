
     active environment : srbench
    active env location : /uufs/chpc.utah.edu/common/home/u1164746/.conda/envs/srbench
            shell level : 1
       user config file : /uufs/chpc.utah.edu/common/home/u1164746/.condarc
 populated config files : 
          conda version : 4.7.10
    conda-build version : 3.18.8
         python version : 2.7.16.final.0
       virtual packages : 
       base environment : /uufs/chpc.utah.edu/sys/installdir/anaconda/2019.07  (read only)
           channel URLs : https://repo.anaconda.com/pkgs/main/linux-64
                          https://repo.anaconda.com/pkgs/main/noarch
                          https://repo.anaconda.com/pkgs/r/linux-64
                          https://repo.anaconda.com/pkgs/r/noarch
          package cache : /uufs/chpc.utah.edu/sys/installdir/anaconda/2019.07/pkgs
                          /uufs/chpc.utah.edu/common/home/u1164746/.conda/pkgs
       envs directories : /uufs/chpc.utah.edu/common/home/u1164746/.conda/envs
                          /uufs/chpc.utah.edu/sys/installdir/anaconda/2019.07/envs
               platform : linux-64
             user-agent : conda/4.7.10 requests/2.22.0 CPython/2.7.16 Linux/3.10.0-1160.36.2.el7.x86_64 centos/7.9.2009 glibc/2.17
                UID:GID : 1372045:4000473
             netrc file : None
           offline mode : False

import from methods.BingoRegressor
algorithm: SymbolicRegressor(max_time=180, metric='mae',
                  operators=['+', '-', '*', '/', 'sin', 'cos', 'exp', 'log'],
                  stack_size=10, use_simplification=True)
hyperparams: [{'population_size': (100, 500, 2500), 'stack_size': (16, 32, 64)}]
========================================
Evaluating BingoRegressor on 
../../../pmlb/datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../../../pmlb/datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0,
                    estimator=SymbolicRegressor(max_time=180, metric='mae',
                                                operators=['+', '-', '*', '/',
                                                           'sin', 'cos', 'exp',
                                                           'log'],
                                                stack_size=10,
                                                use_simplification=True),
                    n_jobs=1,
                    param_grid=[{'population_size': (100, 500, 2500),
                                 'stack_size': (16, 32, 64)}],
                    refit=<function _refit_callable at 0x2b31aeeed8c0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 3
n_possible_iterations: 2
min_resources_: 10
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 9
n_resources: 10
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END .................population_size=100, stack_size=16; total time= 3.0min
[CV] END .................population_size=100, stack_size=16; total time= 3.0min
[CV] END .................population_size=100, stack_size=16; total time= 3.0min
[CV] END .................population_size=100, stack_size=16; total time= 3.0min
[CV] END .................population_size=100, stack_size=16; total time= 3.0min
[CV] END .................population_size=100, stack_size=32; total time=  28.5s
[CV] END .................population_size=100, stack_size=32; total time=   6.8s
[CV] END .................population_size=100, stack_size=32; total time=  12.6s
[CV] END .................population_size=100, stack_size=32; total time=  21.4s
[CV] END .................population_size=100, stack_size=32; total time=  25.4s
[CV] END .................population_size=100, stack_size=64; total time=  12.2s
[CV] END .................population_size=100, stack_size=64; total time=   7.7s
[CV] END .................population_size=100, stack_size=64; total time=  24.3s
[CV] END .................population_size=100, stack_size=64; total time=  22.3s
[CV] END .................population_size=100, stack_size=64; total time=  11.2s
[CV] END .................population_size=500, stack_size=16; total time= 3.0min
[CV] END .................population_size=500, stack_size=16; total time= 3.0min
[CV] END .................population_size=500, stack_size=16; total time= 3.0min
[CV] END .................population_size=500, stack_size=16; total time= 1.1min
[CV] END .................population_size=500, stack_size=16; total time= 3.0min
[CV] END .................population_size=500, stack_size=32; total time=  53.8s
[CV] END .................population_size=500, stack_size=32; total time=  23.5s
[CV] END .................population_size=500, stack_size=32; total time=  51.8s
[CV] END .................population_size=500, stack_size=32; total time=  42.9s
[CV] END .................population_size=500, stack_size=32; total time=  55.6s
[CV] END .................population_size=500, stack_size=64; total time= 1.3min
[CV] END .................population_size=500, stack_size=64; total time=  48.1s
[CV] END .................population_size=500, stack_size=64; total time=  16.7s
[CV] END .................population_size=500, stack_size=64; total time=  21.5s
[CV] END .................population_size=500, stack_size=64; total time= 2.3min
[CV] END ................population_size=2500, stack_size=16; total time= 3.0min
[CV] END ................population_size=2500, stack_size=16; total time= 3.0min
[CV] END ................population_size=2500, stack_size=16; total time= 3.0min
[CV] END ................population_size=2500, stack_size=16; total time= 3.0min
[CV] END ................population_size=2500, stack_size=16; total time= 3.1min
[CV] END ................population_size=2500, stack_size=32; total time= 3.1min
[CV] END ................population_size=2500, stack_size=32; total time= 2.4min
[CV] END ................population_size=2500, stack_size=32; total time= 1.3min
[CV] END ................population_size=2500, stack_size=32; total time= 1.3min
[CV] END ................population_size=2500, stack_size=32; total time= 3.1min
[CV] END ................population_size=2500, stack_size=64; total time= 3.1min
[CV] END ................population_size=2500, stack_size=64; total time= 2.1min
[CV] END ................population_size=2500, stack_size=64; total time= 1.5min
[CV] END ................population_size=2500, stack_size=64; total time= 1.4min
[CV] END ................population_size=2500, stack_size=64; total time= 3.1min
----------
iter: 1
n_candidates: 3
n_resources: 30
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END ................population_size=2500, stack_size=16; total time= 3.0min
[CV] END ................population_size=2500, stack_size=16; total time= 3.0min
[CV] END ................population_size=2500, stack_size=16; total time= 3.0min
[CV] END ................population_size=2500, stack_size=16; total time= 3.0min
[CV] END ................population_size=2500, stack_size=16; total time= 3.0min
[CV] END ................population_size=2500, stack_size=32; total time= 3.1min
[CV] END ................population_size=2500, stack_size=32; total time= 3.1min
[CV] END ................population_size=2500, stack_size=32; total time= 3.1min
[CV] END ................population_size=2500, stack_size=32; total time= 3.1min
[CV] END ................population_size=2500, stack_size=32; total time= 3.1min
[CV] END ................population_size=2500, stack_size=64; total time= 3.1min
[CV] END ................population_size=2500, stack_size=64; total time= 3.1min
[CV] END ................population_size=2500, stack_size=64; total time= 3.1min
[CV] END ................population_size=2500, stack_size=64; total time= 3.1min
[CV] END ................population_size=2500, stack_size=64; total time= 3.1min
Training time measures: 7581.268869329 7599.08918595314
save_file: ../pop_and_stack_runs/192_vineyard//192_vineyard_BingoRegressor_23654
